<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Management - CRUD Operations</title>
</head>

<body>
    <h1>User Management - CRUD Operations</h1>

    <!-- Add or Update User Form -->
    <h2>Add or Update User Form</h2>
    <form id="UserForm">
        <label for="userId">User ID:</label>
        <input type="number" id="userId" name="userId" required><br><br>

        <label for="firstName">First Name:</label>
        <input type="text" id="firstName" name="firstName" required><br><br>

        <label for="lastName">Last Name:</label>
        <input type="text" id="lastName" name="lastName" required><br><br>

        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required><br><br>

        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required><br><br>

        <label for="roleId">Role ID:</label>
        <input type="number" id="roleId" name="roleId" required><br><br>

        <!-- Buttons for POST, PUT, and DELETE operations -->
        <button type="button" onclick="sendUserRequest('POST')">Add User (POST)</button>
        <button type="button" onclick="sendUserRequest('PUT')">Update User (PUT)</button>
        <button type="button" onclick="deleteUser()">Delete User</button>
    </form>
    <label id="responseMessage" style="color: green;"></label>

    <!-- View All Users -->
    <h2>View All Users</h2>
    <button type="button" onclick="fetchAllUsers()">Get All Users</button>
    <div id="usersList"></div>

    <script>
        const userApiUrl = 'https://localhost:7269/api/Users';

        function displayMessage(message, isError = false) {
            const responseLabel = document.getElementById("responseMessage");
            responseLabel.style.color = isError ? "red" : "green";
            responseLabel.textContent = message;
        }

        // Function to handle POST and PUT requests
        function sendUserRequest(method) {
            const userId = document.getElementById("userId").value;
            const firstName = document.getElementById("firstName").value;
            const lastName = document.getElementById("lastName").value;
            const email = document.getElementById("email").value;
            const password = document.getElementById("password").value;
            const roleId = document.getElementById("roleId").value;

            if (!userId || !firstName || !lastName || !email || !password || !roleId) {
                displayMessage("All fields are required!", true);
                return;
            }

            const data = {
                userId: parseInt(userId),
                firstName: firstName,
                lastName: lastName,
                email: email,
                passwordHash: password,
                roleId: parseInt(roleId)
            };

            const endpoint = method === 'PUT' ? `${userApiUrl}/${userId}` : userApiUrl;

            fetch(endpoint, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (response.status === 204) {
                    displayMessage(`${method} Success: No content returned`);
                    return {};
                }
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                displayMessage(`${method} Success: ${JSON.stringify(data)}`);
                fetchAllUsers();
            })
            .catch(error => {
                console.error('Error:', error);
                displayMessage(`Error: ${error.message}`, true);
            });
        }

        // Function to delete a user
        function deleteUser() {
            const userId = document.getElementById("userId").value;
            if (!userId) {
                displayMessage("Please enter a User ID to delete", true);
                return;
            }

            fetch(`${userApiUrl}/${userId}`, { method: 'DELETE' })
            .then(response => {
                if (response.status === 204) {
                    displayMessage(`DELETE Success: User ID ${userId} deleted`);
                    fetchAllUsers();
                    return;
                }
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }
                return response.json();
            })
            .catch(error => {
                console.error('Error:', error);
                displayMessage(`Error: ${error.message}`, true);
            });
        }

        // Function to fetch all users
        function fetchAllUsers() {
            fetch(userApiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Request failed with status ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => displayUsers(data))
                .catch(error => {
                    console.error('Error:', error);
                    displayMessage(`Error: ${error.message}`, true);
                });
        }

        // Function to display all users
        function displayUsers(users) {
            const usersList = document.getElementById("usersList");
            usersList.innerHTML = "<h3>Users:</h3>";
            usersList.innerHTML += users.map(user => `
                <div>
                    <p><b>User ID:</b> ${user.userId}</p>
                    <p><b>First Name:</b> ${user.firstName}</p>
                    <p><b>Last Name:</b> ${user.lastName}</p>
                    <p><b>Email:</b> ${user.email}</p>
                    <p><b>Role ID:</b> ${user.roleId}</p>
                    <hr>
                </div>
            `).join('');
        }
    </script>
</body>

</html>
