
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Risk Management - CRUD Operations</title>
</head>
<body>
    <h1>Risk Management - CRUD Operations</h1>

    <!-- Add or Update Risk Form -->
    <h2>Add or Update Risk Form</h2>
    <form id="RiskForm">
        <label for="riskId">Risk ID:</label>
        <input type="number" id="riskId" name="riskId" required><br><br>

        <label for="portfolioId">Portfolio ID:</label>
        <input type="number" id="portfolioId" name="portfolioId" required><br><br>

        <label for="riskLevel">Risk Level:</label>
        <input type="number" step="0.01" id="riskLevel" name="riskLevel" required><br><br>

        <label for="riskType">Risk Type:</label>
        <input type="text" id="riskType" name="riskType" required><br><br>

        <!-- Buttons for POST, PUT, and DELETE operations -->
        <button type="button" onclick="sendRequest('POST')">Add Risk (POST)</button>
        <button type="button" onclick="sendRequest('PUT')">Update Risk (PUT)</button>
        <button type="button" onclick="deleteRisk()">Delete Risk</button>
    </form>
    <label id="responseMessage" style="color: green;"></label>

    <!-- View All Risks -->
    <h2>View All Risks</h2>
    <button type="button" onclick="fetchAllRisks()">Get All Risks</button>
    <div id="risksList"></div>

    <script>
        const apiUrl = 'https://localhost:7269/api/Risks';

        function displayMessage(message, isError = false) {
            const responseLabel = document.getElementById("responseMessage");
            responseLabel.style.color = isError ? "red" : "green";
            responseLabel.textContent = message;
        }

        function sendRequest(method) {
            const riskId = document.getElementById("riskId").value;
            const portfolioId = document.getElementById("portfolioId").value;
            const riskLevel = document.getElementById("riskLevel").value;
            const riskType = document.getElementById("riskType").value;

            if (!riskId || !portfolioId || !riskLevel || !riskType) {
                displayMessage("All fields are required!", true);
                return;
            }

            const data = {
                riskId: parseInt(riskId),
                portfolioId: parseInt(portfolioId),
                riskLevel: parseFloat(riskLevel),
                riskType: riskType
            };

            const endpoint = method === 'PUT' ? `${apiUrl}/${riskId}` : apiUrl;

            fetch(endpoint, {
                method: method,
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data)
            })
            .then(response => {
                if (response.status === 204) {
                    displayMessage(`${method} Success: No content returned`);
                    return {};
                }
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                displayMessage(`${method} Success: ${JSON.stringify(data)}`);
                fetchAllRisks();
            })
            .catch(error => {
                console.error('Error:', error);
                displayMessage(`Error: ${error.message}`, true);
            });
        }

        function deleteRisk() {
            const riskId = document.getElementById("riskId").value;
            if (!riskId) {
                displayMessage("Please enter a Risk ID to delete", true);
                return;
            }

            fetch(`${apiUrl}/${riskId}`, { method: 'DELETE' })
            .then(response => {
                if (response.status === 204) {
                    displayMessage(`DELETE Success: Risk ID ${riskId} deleted`);
                    fetchAllRisks();
                    return;
                }
                if (!response.ok) {
                    throw new Error(`Request failed with status ${response.status}`);
                }
                return response.json();
            })
            .catch(error => {
                console.error('Error:', error);
                displayMessage(`Error: ${error.message}`, true);
            });
        }

        function fetchAllRisks() {
            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Request failed with status ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => displayRisks(data))
                .catch(error => {
                    console.error('Error:', error);
                    displayMessage(`Error: ${error.message}`, true);
                });
        }

        function displayRisks(risks) {
            const risksList = document.getElementById("risksList");
            risksList.innerHTML = "<h3>Risks:</h3>";
            risksList.innerHTML += risks.map(risk => `
                <div>
                    <p><b>ID:</b> ${risk.riskId}</p>
                    <p><b>Portfolio ID:</b> ${risk.portfolioId}</p>
                    <p><b>Risk Level:</b> ${risk.riskLevel}</p>
                    <p><b>Risk Type:</b> ${risk.riskType}</p>
                    <hr>
                </div>
            `).join('');
        }
    </script>
</body>
</html>
